(ARITHMETIC OPERATIONS)
(if (eq (+ 1 2) 3) true nil Expected Result: true)
true
(if (eq (- 5 3) 2) true nil Expected Result: true)
true
(if (eq (* 4 3) 12) true nil Expected Result: true)
true
(if (eq (/ 10 2) 5) true nil Expected Result: true)
true
(if (eq (% 10 3) 1) true nil Expected Result: true)
true
(if (eq (+ 1 2 3 4) 10) true nil Expected Result: true)
true


(COMPARISON OPERATIONS)
(if (eq (gt 10 5) true) true nil Expected Result: true)
true
(if (eq (lt 5 10) true) true nil Expected Result: true)
true
(if (eq (eq 5 5) true) true nil Expected Result: true)
true
(if (eq (eq 5 6) nil) true nil Expected Result: true)
true
(if (eq (gte 10 10) true) true nil Expected Result: true)
true
(if (eq (lte 7 8) true) true nil Expected Result: true)
true
(if (eq (lte 8 8) true) true nil Expected Result: true)
true


(LOGICAL OPERATIONS)
(if (eq (and true true) true) true nil Expected Result: true)
true
(if (eq (and true nil) nil) true nil Expected Result: true)
true
(if (eq (or true nil) true) true nil Expected Result: true)
true
(if (eq (or nil nil) nil) true nil Expected Result: true)
true
(if (eq (not true) nil) true nil Expected Result: true)
true
(if (eq (not nil) true) true nil Expected Result: true)
true


(CONDITIONALS)
(if (eq (if (gt 10 5) 1 0) 1) true nil Expected Result: true)
true
(if (eq (if (lt 3 2) 1 0) 0) true nil Expected Result: true)
true
(if (eq (if true 42 99) 42) true nil Expected Result: true)
true
(if (eq (if nil 42 99) 99) true nil Expected Result: true)
true


(COND)
(if (eq (cond ((gt 10 5) 1) ((lt 3 2) 0)) 1) true nil Expected Result: true)
true
(if (eq (cond ((lt 0 0) 1) ((true) 100)) 100) true nil Expected Result: true)
(if (eq (cond ((eq 2 2) 10) ((true) 20)) 10) true nil Expected Result: true)
true


(LIST OPERATIONS (CONS, CAR, CDR))
(if (eq (cdr x) (cons 2 (cons 3 (cons 4 nil)))) true nil Expected Result: true)
true
(if (eq (cons 1 nil) (cons 1 nil)) true nil Expected Result: true)
true
(if (eq (cons 1 (cons 2 nil)) (cons 1 (cons 2 nil))) true nil Expected Result: true)
true
(if (eq (car (cons 1 (cons 2 nil))) 1) true nil Expected Result: true)
true
(if (eq (cdr (cons 1 (cons 2 nil))) (cons 2 nil)) true nil Expected Result: true)
true
(if (eq (car (cdr (cons 1 (cons 2 (cons 3 nil))))) 2) true nil Expected Result: true)
true


(TYPE CHECKS (SYM?, NUM?, LIST?, NIL?))
(if (eq (SYM? 'a) true) true nil Expected Result: true)
true
(if (eq (SYM? 5) nil) true nil Expected Result: true)
true
(if (eq (NUM? 5) true) true nil Expected Result: true)
true
(if (eq (NUM? 'a) nil) true nil Expected Result: true)
true
(if (eq (LIST? (cons 1 nil)) true) true nil Expected Result: true)
true
(if (eq (LIST? 10) nil) true nil Expected Result: true)
true
(if (eq (NIL? nil) true) true nil Expected Result: true)
true
(if (eq (NIL? 0) nil) true nil Expected Result: true)
true


(USER DEFINED FUNCTIONS)
(if (eq (add 2 3) 5) true nil Expected Result: true)
true
(if (eq (mul 4 5) 20) true nil Expected Result: true)
true
(if (eq (square 4) 16) true nil Expected Result: true)
true
(if (eq (abs 10) 10) true nil Expected Result: true)
true
(if (eq (abs -5) 5) true nil Expected Result: true)
(QUOTING)
(if (eq (quote (1 2 3)) (cons 1 (cons 2 (cons 3 nil)))) true nil Expected Result: true)
true
(if (eq (quote a) a) true nil Expected Result: true)
true
(if (eq (quote (add 1 2)) (quote (add 1 2))) true nil Expected Result: true)
true


(EVALUATING)
(if (eq (eval (quote (+ 1 2))) 3) true nil Expected Result: true)
true
(if (eq (eval (quote (mul 3 4))) 12) true nil Expected Result: true)
true
(if (eq (evalAdd 5 7) 12) true nil Expected Result: true)
true


(COMBINATIONS (SET, EVAL, QUOTE))
(if (eq (eval (quote (+ x 5))) 15) true nil Expected Result: true)
true
(if (eq (calculate 20 30) 50) true nil Expected Result: true)
true


(USER DEFINED FUNCTIONS USING COND AND LOGICAL OPERATIONS)
(if (eq (max 10 20) 20) true nil Expected Result: true)
true
(if (eq (max 15 5) 15) true nil Expected Result: true)
true
(if (eq (min 3 7) 3) true nil Expected Result: true)
true
(if (eq (min 10 5) 5) true nil Expected Result: true)
true
(if (eq (logicalTest 5 9) true) true nil Expected Result: true)
true
(if (eq (logicalTest 0 9) nil) true nil Expected Result: true)
true
